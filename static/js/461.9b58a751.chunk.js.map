{"version":3,"file":"static/js/461.9b58a751.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/GoalItem/GoalItem.styled.jsx","components/GoalItem/GoalItem.jsx","pages/Goal/Goal.styled.jsx","pages/Goal/Goal.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainButton = styled.button`\n    display: flex;\n    width: 360px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 50px;\n\n\n    border-radius: 12px;\n    opacity: ${props => ( props.disabled ? 0.3 : 1)};\n    background-color: var(--accent-color);\n    color: var(--text-button-color);\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 1.44;\n    letter-spacing: 0.2px;\n    transition: background-color var(--transition);\n\n    &:hover,\n    &:focus {\n        background-color: var(--hover-color);\n    }\n\n`;","import { MainButton } from \"./Button.styled\";\n\nconst Button = ({ text, handler, disabled=false }) => {\n    return (\n        <MainButton type=\"button\" onClick={handler} disabled={disabled}>{text}</MainButton>\n    );\n};\n\nexport default Button;","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n    position: absolute;\n\tz-index: -1;\n\topacity: 0;\n\tmargin: 10px 0 0 7px;\n    &:checked + div {\n        box-shadow:  var(--shadow);\n        border-color: var(--hover-color);\n    }\n    &:hover + div,\n    :focus + div {\n        box-shadow:  var(--shadow);\n    }\n\n    + div {\n        display: flex;\n    align-items: center;\n    justify-content: start;     \n    width: 172px;\n    height: 172px;\n\n    border-radius: 20.848px;\n    border: 1.042px solid var(--borders-color);\n    background-image: url( ${props => props.src }), var(--grad);\n    background-repeat: no-repeat;\n    background-position: right;\n    background-size: contain;\n    cursor: pointer;\n    }\n`;\n\nexport const Text = styled.p`\n    color: var(--primary-text-color);\n    font-size: 16.679px;\n    font-weight: 500;\n    line-height: 1.37; \n    letter-spacing: 0.208px;\n    width: 83px;\n    margin-left: 10.42px;\n`;","import { useEffect, useState } from \"react\";\nimport { Input, Text } from \"./GoalItem.styled\";\n\n\nconst GoalItem = ({ text, src, handleChecked }) => {\n    const [goal, setGoal] = useState('');\n    const [isChecked, setIsChecked] = useState(false);\n\n    useEffect(() => {\n        const goalFromLS = JSON.parse(localStorage.getItem(\"goal\"));\n        if(goalFromLS) {\n            setGoal(goalFromLS)\n        }\n    },[setGoal]);\n\n    useEffect(() => {\n        if(text === goal) {\n            setIsChecked(true);\n            handleChecked(true);\n        }\n    },[setIsChecked, handleChecked, text, goal]);\n\n    const handleInputChange = e => {\n        const { value } = e.target;\n        localStorage.setItem(\"goal\", JSON.stringify(value));\n        setGoal(value);\n    };\n\n    return (\n        <>\n            <label>\n                <Input type=\"radio\" name=\"goal\" value={text} src={src} \n                onChange={handleInputChange} checked={isChecked}/>\n                    <div>\n                        <Text>{text}</Text>\n                    </div>\n            </label>\n        </>\n    );\n};\n\nexport default GoalItem;\n","import styled from '@emotion/styled';\n\nexport const GoalContainer = styled.main`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const Text = styled.p`\n    margin-bottom: 15px;\n    color: var(--primary-text-color);\n    text-align: center;\n    font-weight: 700;\n    line-height: 1.71;\n    letter-spacing: 0.2px;\n`;\n\nexport const GoalsOption = styled.div`\n    width: 360px;\n    height: 360px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 16px;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 129px;\n`;\n\n","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport TopBar from \"components/TopBar/TopBar\";\nimport Banner from \"components/Banner/Banner\";\nimport GoalItem from \"components/GoalItem/GoalItem\";\nimport Button from \"components/Button/Button\";\nimport { GoalContainer, GoalsOption, Text } from \"./Goal.styled\";\nimport { loseWeight, gainMuscle, healthyHabits, healthyHabits2 } from  '../../images';\n\n\nconst goalData = [{\n        text: 'Lose Weight',\n        src: loseWeight,\n    }, {\n        text: 'Gain Muscle',\n        src: gainMuscle,\n    }, {\n        text: 'Develop healthy habits',\n        src: healthyHabits,\n    }, {\n        text: 'Develop healthy habits2',\n        src: healthyHabits2,\n    }\n];\n\nconst Goal = () => {\n    const [isChecked, setIsChecked] = useState(false);\n    const navigate = useNavigate();\n\n    const handleContinue = () => {\n        navigate('/measure')\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title>Goal</title>\n            </Helmet>\n            <TopBar address={'home'}/>\n            <GoalContainer>\n                <Banner title={'The Goal'} \n                    text={'Focus on the health benefits you need. Balanced nutrition will let you achieve them'}/>\n                <Text>What are your goals?</Text>\n                <GoalsOption>\n                    {goalData.map(({ text, src }) => (\n                        <GoalItem \n                            key={text} text={text} src={src} handleChecked={setIsChecked}\n                        />\n                    ))}\n                </GoalsOption>\n                <Button text={'Continue'} handler={handleContinue} disabled={!isChecked}/>\n            </GoalContainer>\n        </>\n    );\n};\n\nexport default Goal;\n"],"names":["MainButton","styled","_templateObject","_taggedTemplateLiteral","props","disabled","_ref","text","handler","_ref$disabled","_jsx","type","onClick","children","Input","src","Text","_templateObject2","handleChecked","_useState","useState","_useState2","_slicedToArray","goal","setGoal","_useState3","_useState4","isChecked","setIsChecked","useEffect","goalFromLS","JSON","parse","localStorage","getItem","_Fragment","_jsxs","name","value","onChange","e","target","setItem","stringify","checked","GoalContainer","GoalsOption","_templateObject3","goalData","loseWeight","gainMuscle","healthyHabits","healthyHabits2","navigate","useNavigate","Helmet","TopBar","address","Banner","title","map","GoalItem","Button"],"sourceRoot":""}