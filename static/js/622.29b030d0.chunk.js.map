{"version":3,"file":"static/js/622.29b030d0.chunk.js","mappings":"kQAEaA,EAAQC,EAAAA,EAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+gBA2BpBC,EAAOH,EAAAA,EAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8L,SCO5B,EAjCqB,SAAHG,GAAkB,IAAZC,EAAID,EAAJC,KACpBC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,IAE9BG,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aACpDJ,GACCN,EAAYM,GAEbZ,IAASK,GACRK,GAAa,EAErB,GAAE,CAACJ,EAAaI,EAAcV,EAAMK,IAQpC,OACIY,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACIF,EAAAA,EAAAA,KAACxB,EAAK,CAAC4B,KAAK,QAAQC,KAAK,WAAWC,MAAOvB,EAC3CwB,SAVc,SAAAC,GACtB,IAAQF,EAAUE,EAAEC,OAAZH,MACRR,aAAaY,QAAQ,WAAYd,KAAKe,UAAUL,IAChDjB,EAAYiB,EAChB,EAMyCM,QAASpB,KAClCQ,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAACpB,EAAI,CAAAsB,SAAEnB,UAK/B,EChCa8B,EAAoBpC,EAAAA,EAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2GAO/BC,EAAOH,EAAAA,EAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qJAQfmC,EAAiBrC,EAAAA,EAAAA,IAAUsC,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,0KAU3BqC,EAA0BvC,EAAAA,EAAAA,IAAUwC,IAAAA,GAAAtC,EAAAA,EAAAA,GAAA,iE,SCnB3CuC,EAAe,CAAC,CAClBnC,KAAM,iBACP,CACCA,KAAM,4BACP,CACCA,KAAM,4BACP,CACCA,KAAM,6BA4BV,EAxBiB,WACb,OACQoB,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,CAAAjB,UACHF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,gBAEXF,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CAACC,QAAS,cACjBlB,EAAAA,EAAAA,MAACU,EAAiB,CAAAX,SAAA,EACdF,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CAACC,MAAO,oBACfxC,KAAM,+FACNiB,EAAAA,EAAAA,KAACpB,EAAI,CAAAsB,SAAC,wCACNC,EAAAA,EAAAA,MAACa,EAAuB,CAAAd,SAAA,EACpBF,EAAAA,EAAAA,KAAA,OAAKwB,IAAKC,EAAAA,GAAYC,IAAI,cAAcC,MAAM,WAC9C3B,EAAAA,EAAAA,KAACc,EAAc,CAAAZ,SACVgB,EAAaU,KAAI,SAAA9C,GAAA,IAAEC,EAAID,EAAJC,KAAI,OACpBiB,EAAAA,EAAAA,KAAC6B,EAAY,CAAY9C,KAAMA,GAAZA,EAAmB,cAOtE,C","sources":["components/ExerciseItem/ExerciseItem.styled.jsx","components/ExerciseItem/ExerciseItem.jsx","pages/Exercise/Exercise.styled.jsx","pages/Exercise/Exercise.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n    position: absolute;\n\tz-index: -1;\n\topacity: 0;\n\tmargin: 10px 0 0 7px;\n    &:checked + div {\n        box-shadow:  var(--shadow);\n        border-color: var(--hover-color);\n    }\n    &:hover + div,\n    :focus + div {\n        box-shadow:  var(--shadow);\n    }\n\n    + div {\n        display: flex;\n    align-items: center;\n    justify-content: start;\n    width: 172px;\n    height: 80px;\n\n    border-radius: 20.848px;\n    border: 1.042px solid var(--borders-color);\n    cursor: pointer;\n    }\n`;\n\nexport const Text = styled.p`\n    color: var(--primary-text-color);\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1.37; \n    letter-spacing: 0.2px;\n    width: 130px;\n    margin-left: 15px;\n`;","import { useEffect, useState } from \"react\";\nimport { Input, Text } from \"./ExerciseItem.styled\";\n\nconst ExerciseItem = ({ text }) => {\n    const [exercise, setExercise] = useState('');\n    const [isChecked, setIsChecked] = useState(false);\n\n    useEffect(() => {\n        const exerciseFromLS = JSON.parse(localStorage.getItem(\"exercise\"));\n        if(exerciseFromLS) {\n            setExercise(exerciseFromLS)\n        }\n        if(text === exercise) {\n            setIsChecked(true)\n        }\n    },[setExercise, setIsChecked, text, exercise ])\n\n    const handleInputChange = e => {\n        const { value } = e.target;\n        localStorage.setItem(\"exercise\", JSON.stringify(value));\n        setExercise(value);\n    };\n\n    return (\n        <>\n            <label>\n                <Input type=\"radio\" name=\"exercise\" value={text}\n                onChange={handleInputChange} checked={isChecked}/>\n                    <div>\n                        <Text>{text}</Text>\n                    </div>\n            </label>\n        </>\n    );\n};\n\nexport default ExerciseItem;","import styled from '@emotion/styled';\n\nexport const ExerciseContainer = styled.main`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const Text = styled.p`\n    color: var(--primary-text-color);\n    text-align: center;\n    font-weight: 700;\n    line-height: 1.71;\n    letter-spacing: 0.2px;\n`;\n\nexport const ExerciseOption = styled.div`\n    width: 172px;\n    height: 365px;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const ExerciseOptionContainer = styled.div`\n    display: flex;\n    gap: 15px;\n    margin: 15px;\n`;","import { Helmet } from \"react-helmet\";\nimport TopBar from \"components/TopBar/TopBar\";\nimport Banner from \"components/Banner/Banner\";\nimport ExerciseItem from \"components/ExerciseItem/ExerciseItem\";\nimport { ExerciseContainer, ExerciseOption, ExerciseOptionContainer, Text } from \"./Exercise.styled\";\nimport { activeGirl } from  '../../images';\n\n\nconst exerciseData = [{\n    text: 'Hardly at all',\n}, {\n    text: 'Fitness 1-2 times a week',\n}, {\n    text: 'Fitness 3-5 times a week',\n}, {\n    text: 'Fitness 5-7 times a week',\n}\n];\n\nconst Exercise = () => {\n    return (\n            <>\n                <Helmet>\n                    <title>Exercise</title>\n                </Helmet>\n                <TopBar address={'behavior'}/>\n                <ExerciseContainer>\n                    <Banner title={'Physical exercise'} \n                    text={'Physical exercise means a lot for a woman who wants to lose kilos and works at the office'}/>\n                    <Text>How active are you during the day?</Text>\n                    <ExerciseOptionContainer>\n                        <img src={activeGirl} alt=\"active-girl\" width=\"173px\"/>\n                        <ExerciseOption>\n                            {exerciseData.map(({text}) => (\n                                <ExerciseItem key={text} text={text}/>\n                            ))}\n                        </ExerciseOption>\n                    </ExerciseOptionContainer>\n                </ExerciseContainer>\n            </>\n    );\n};\n\nexport default Exercise;"],"names":["Input","styled","_templateObject","_taggedTemplateLiteral","Text","_templateObject2","_ref","text","_useState","useState","_useState2","_slicedToArray","exercise","setExercise","_useState3","_useState4","isChecked","setIsChecked","useEffect","exerciseFromLS","JSON","parse","localStorage","getItem","_jsx","_Fragment","children","_jsxs","type","name","value","onChange","e","target","setItem","stringify","checked","ExerciseContainer","ExerciseOption","_templateObject3","ExerciseOptionContainer","_templateObject4","exerciseData","Helmet","TopBar","address","Banner","title","src","activeGirl","alt","width","map","ExerciseItem"],"sourceRoot":""}