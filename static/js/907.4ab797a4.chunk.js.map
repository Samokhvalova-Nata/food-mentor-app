{"version":3,"file":"static/js/907.4ab797a4.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/BehaviorItem/BehaviorItem.styled.jsx","components/BehaviorItem/BehaviorItem.jsx","pages/Behavior/Behavior.styled.jsx","pages/Behavior/Behavior.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainButton = styled.button`\n    display: flex;\n    width: 360px;\n    height: 50px;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 50px;\n\n\n    border-radius: 12px;\n    opacity: ${props => ( props.disabled ? 0.3 : 1)};\n    background-color: var(--accent-color);\n    color: var(--text-button-color);\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 1.44;\n    letter-spacing: 0.2px;\n    transition: background-color var(--transition);\n\n    &:hover,\n    &:focus {\n        background-color: var(--hover-color);\n    }\n\n`;","import { MainButton } from \"./Button.styled\";\n\nconst Button = ({ text, handler, disabled=false }) => {\n    return (\n        <MainButton type=\"button\" onClick={handler} disabled={disabled}>{text}</MainButton>\n    );\n};\n\nexport default Button;","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n    position: absolute;\n\tz-index: -1;\n\topacity: 0;\n\tmargin: 10px 0 0 7px;\n    &:checked + div {\n        box-shadow:  var(--shadow);\n        border-color: var(--hover-color);\n    }\n    &:hover + div {\n        box-shadow:  var(--shadow);\n    }\n\n    + div {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    width: 172px;\n    height: 60px;\n    padding: 12px 24px 12px 15px;\n    border-radius: 15px;\n    border: 1px solid var(--borders-color);\n    background: var(--text-button-color);\n    cursor: pointer;\n    }\n`;\n\nexport const Text = styled.p`\n    color: var(--primary-text-color);\n    font-size: 12px;\n    line-height: 1.5; \n    letter-spacing: 0.3px;\n    width: 93px;\n    margin-left: 10.42px;\n`;","import { useEffect, useState } from \"react\";\nimport { Input, Text } from \"./BehaviorItem.styled\";\n\nconst BehaviorItem = ({ text, src, onHandleBehavior, behaviorList }) => {\n    const [isChecked, setIsChecked] = useState(false);\n\n    useEffect(() => {\n        if (behaviorList.includes(text)) {\n            setIsChecked(true)\n        } else {\n            setIsChecked(false)\n        }\n    },[behaviorList, text]);\n\n    const handleInputChange = e => {\n        const { value } = e.target;\n        onHandleBehavior(value);\n    };\n\n    return (\n        <>\n            <label>\n                <Input type=\"checkbox\" name=\"behavior\" value={text} src={src} \n                onChange={handleInputChange} \n                checked={isChecked} \n                />\n                    <div>\n                        <img src={src} alt={text} width=\"30px\" height=\"30px\"/>\n                        <Text>{text}</Text>\n                    </div>\n            </label>\n        </>\n    );\n};\n\nexport default BehaviorItem;","import styled from '@emotion/styled';\n\nexport const BehaviorContainer = styled.main`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const BehaviorOption = styled.div`\n    width: 359px;\n    height: 210px;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 15px;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 129px;\n`;","import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport TopBar from \"components/TopBar/TopBar\";\nimport Banner from \"components/Banner/Banner\";\nimport Button from \"components/Button/Button\";\nimport BehaviorItem from \"components/BehaviorItem/BehaviorItem\";\nimport { BehaviorContainer, BehaviorOption } from \"./Behavior.styled\";\nimport { moon, donut, soda, salt, pizza, cross } from  '../../images';\n\n\nconst behaviorData = [{\n    text: 'I do not rest enough',\n    src: moon,\n}, {\n    text: 'I have a sweet tooth',\n    src: donut,\n}, {\n    text: 'I have too much soda',\n    src: soda,\n}, {\n    text: 'I eat many salty foods',\n    src: salt,\n}, {\n    text: 'I enjoy midnight snacks',\n    src: pizza,\n}, {\n    text: 'None of the above',\n    src: cross,\n}\n];\n\nconst Behavior = () => {\n    const [behaviorList, setBehaviorList] = useState([]);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const behaviorFromLS = JSON.parse(localStorage.getItem(\"behavior\"));\n        if(behaviorFromLS) {\n            setBehaviorList(behaviorFromLS)\n        }\n    },[]);\n\n    useEffect(() => {\n        localStorage.setItem(\"behavior\", JSON.stringify(behaviorList));\n    },[behaviorList]);\n\n    const handleBehavior = (value) => {\n        const newBehavior = !behaviorList.includes(value);\n        if(newBehavior) {\n            setBehaviorList(prev => [...prev, value]);\n        } else {\n            setBehaviorList(prev => prev.filter(el => el !== value))\n        }\n    };\n\n    const handleContinue = () => {\n        navigate('/exercise')\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title>Behavior</title>\n            </Helmet>\n            <TopBar address={'measure'}/>\n            <BehaviorContainer>\n                <Banner title={'Destructive behaviors'} \n                    text={'We all have them! Which are yours?'}/>\n                <BehaviorOption>\n                    {behaviorData.map(({ text, src }) => (\n                        <BehaviorItem \n                            key={text}\n                            text={text} src={src}\n                            behaviorList={behaviorList}\n                            onHandleBehavior={handleBehavior}/>\n                    ))}\n                </BehaviorOption>\n                <Button text={'Continue'} handler={handleContinue} disabled={behaviorList.length === 0}/>\n            </BehaviorContainer>\n        </>\n    );\n};\n\nexport default Behavior;"],"names":["MainButton","styled","_templateObject","_taggedTemplateLiteral","props","disabled","_ref","text","handler","_ref$disabled","_jsx","type","onClick","children","Input","Text","_templateObject2","src","onHandleBehavior","behaviorList","_useState","useState","_useState2","_slicedToArray","isChecked","setIsChecked","useEffect","includes","_Fragment","_jsxs","name","value","onChange","e","target","checked","alt","width","height","BehaviorContainer","BehaviorOption","behaviorData","moon","donut","soda","salt","pizza","cross","setBehaviorList","navigate","useNavigate","behaviorFromLS","JSON","parse","localStorage","getItem","setItem","stringify","handleBehavior","newBehavior","prev","concat","_toConsumableArray","filter","el","Helmet","TopBar","address","Banner","title","map","BehaviorItem","Button","length"],"sourceRoot":""}